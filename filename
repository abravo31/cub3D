==30208== Memcheck, a memory error detector
==30208== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==30208== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==30208== Command: ./cub3D doors.cub
==30208== Parent PID: 4751
==30208== 
==30208== Invalid write of size 1
==30208==    at 0x11855A: ft_bzero (in /home/daniel/Desktop/42/cub3D/cub3D)
==30208==    by 0x1114C3: lauch_rays ([4]ray_generation.c:105)
==30208==    by 0x1116B7: raycasting ([4]ray_generation.c:138)
==30208==    by 0x113913: render (raycasting.c:38)
==30208==    by 0x113C19: lauch_raycasting (raycasting.c:56)
==30208==    by 0x10FD9C: main (main.c:73)
==30208==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==30208== 
==30208== 
==30208== Process terminating with default action of signal 11 (SIGSEGV)
==30208==  Access not within mapped region at address 0x0
==30208==    at 0x11855A: ft_bzero (in /home/daniel/Desktop/42/cub3D/cub3D)
==30208==    by 0x1114C3: lauch_rays ([4]ray_generation.c:105)
==30208==    by 0x1116B7: raycasting ([4]ray_generation.c:138)
==30208==    by 0x113913: render (raycasting.c:38)
==30208==    by 0x113C19: lauch_raycasting (raycasting.c:56)
==30208==    by 0x10FD9C: main (main.c:73)
==30208==  If you believe this happened as a result of a stack
==30208==  overflow in your program's main thread (unlikely but
==30208==  possible), you can try to increase the size of the
==30208==  main thread stack using the --main-stacksize= flag.
==30208==  The main thread stack size used in this run was 8388608.
==30208== 
==30208== HEAP SUMMARY:
==30208==     in use at exit: 65,226 bytes in 141 blocks
==30208==   total heap usage: 1,368 allocs, 1,227 frees, 1,146,428 bytes allocated
==30208== 
==30208== LEAK SUMMARY:
==30208==    definitely lost: 0 bytes in 0 blocks
==30208==    indirectly lost: 0 bytes in 0 blocks
==30208==      possibly lost: 0 bytes in 0 blocks
==30208==    still reachable: 65,226 bytes in 141 blocks
==30208==         suppressed: 0 bytes in 0 blocks
==30208== Rerun with --leak-check=full to see details of leaked memory
==30208== 
==30208== For lists of detected and suppressed errors, rerun with: -s
==30208== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 1 from 1)
